spring:
  application:
    name: santech-market

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/santech_market
    username: postgres
    password: 12345
    driver-class-name: org.postgresql.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        default_schema: public
    defer-datasource-initialization: false

  # Liquibase Configuration
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: public

  # Security Configuration
  security:
    jwt:
      secret-key: "sanitech-super-secret-jwt-key-for-development-only-change-in-production"
      expiration: 86400000 # 24 hours in milliseconds (access token)
      refresh-expiration: 604800000 # 7 days in milliseconds (refresh token)

  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  # File Upload Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 5MB
      file-size-threshold: 2KB

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api/v1

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# Logging Configuration
logging:
  level:
    kg.santechmarket: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  packages-to-scan: kg.santechmarket.controller

# File Storage Configuration
file-storage:
  # Storage type: local or s3
  type: local

  # Local storage configuration
  local:
    upload-dir: ./uploads
    base-url: http://localhost:8080/api/v1

  # AWS S3 configuration (for production)
  s3:
    bucket-name: santech-market-images
    region: us-east-1
    access-key: ${AWS_ACCESS_KEY:}
    secret-key: ${AWS_SECRET_KEY:}
    cloudfront-domain: ${AWS_CLOUDFRONT_DOMAIN:}

# Application Configuration
app:
  password-reset:
    expiration-minutes: 15  # Время действия кода сброса пароля в минутах

  # Nikita Mobile SMS Configuration
  nikita-sms:
    enabled: true  # Включить/выключить отправку SMS
    test-mode: true  # Тестовый режим (SMS не будут отправляться реально)
    api-url: https://smspro.nikita.kg/api/message
    login: ${NIKITA_SMS_LOGIN:test_login}  # Логин партнера (из переменной окружения)
    password: ${NIKITA_SMS_PASSWORD:test_password}  # Пароль партнера (из переменной окружения)
    sender: SanTech  # Имя отправителя (до 11 латинских символов или 14 цифр)